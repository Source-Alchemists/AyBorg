// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AyBorg.Data.Agent.Migrations.PostgreSQL
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20220929133625_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AyBorg.SDK.Data.DAL.LinkRecord", b =>
                {
                    b.Property<Guid>("DbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProjectRecordId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TargetId")
                        .HasColumnType("uuid");

                    b.HasKey("DbId");

                    b.HasIndex("ProjectRecordId");

                    b.ToTable("AyBorgLinks");
                });

            modelBuilder.Entity("AyBorg.SDK.Data.DAL.PortRecord", b =>
                {
                    b.Property<Guid>("DbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Brand")
                        .HasColumnType("integer");

                    b.Property<int>("Direction")
                        .HasColumnType("integer");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("StepRecordId")
                        .HasColumnType("uuid");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DbId");

                    b.HasIndex("StepRecordId");

                    b.ToTable("AyBorgPorts");
                });

            modelBuilder.Entity("AyBorg.SDK.Data.DAL.ProjectMetaRecord", b =>
                {
                    b.Property<Guid>("DbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("ProjectRecordId")
                        .HasColumnType("uuid");

                    b.Property<string>("ServiceUniqueName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("DbId");

                    b.HasIndex("ProjectRecordId")
                        .IsUnique();

                    b.ToTable("AyBorgProjectMetas");
                });

            modelBuilder.Entity("AyBorg.SDK.Data.DAL.ProjectRecord", b =>
                {
                    b.Property<Guid>("DbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("DbId");

                    b.ToTable("AyBorgProjects");
                });

            modelBuilder.Entity("AyBorg.SDK.Data.DAL.StepRecord", b =>
                {
                    b.Property<Guid>("DbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MetaInfoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProjectRecordId")
                        .HasColumnType("uuid");

                    b.Property<int>("X")
                        .HasColumnType("integer");

                    b.Property<int>("Y")
                        .HasColumnType("integer");

                    b.HasKey("DbId");

                    b.HasIndex("MetaInfoId");

                    b.HasIndex("ProjectRecordId");

                    b.ToTable("AyBorgSteps");
                });

            modelBuilder.Entity("AyBorg.SDK.PluginMetaInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AssemblyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AssemblyVersion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PluginMetaInfo");
                });

            modelBuilder.Entity("AyBorg.SDK.Data.DAL.LinkRecord", b =>
                {
                    b.HasOne("AyBorg.SDK.Data.DAL.ProjectRecord", "ProjectRecord")
                        .WithMany("Links")
                        .HasForeignKey("ProjectRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectRecord");
                });

            modelBuilder.Entity("AyBorg.SDK.Data.DAL.PortRecord", b =>
                {
                    b.HasOne("AyBorg.SDK.Data.DAL.StepRecord", "StepRecord")
                        .WithMany("Ports")
                        .HasForeignKey("StepRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StepRecord");
                });

            modelBuilder.Entity("AyBorg.SDK.Data.DAL.ProjectMetaRecord", b =>
                {
                    b.HasOne("AyBorg.SDK.Data.DAL.ProjectRecord", null)
                        .WithOne("Meta")
                        .HasForeignKey("AyBorg.SDK.Data.DAL.ProjectMetaRecord", "ProjectRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AyBorg.SDK.Data.DAL.StepRecord", b =>
                {
                    b.HasOne("AyBorg.SDK.PluginMetaInfo", "MetaInfo")
                        .WithMany()
                        .HasForeignKey("MetaInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AyBorg.SDK.Data.DAL.ProjectRecord", "ProjectRecord")
                        .WithMany("Steps")
                        .HasForeignKey("ProjectRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MetaInfo");

                    b.Navigation("ProjectRecord");
                });

            modelBuilder.Entity("AyBorg.SDK.Data.DAL.ProjectRecord", b =>
                {
                    b.Navigation("Links");

                    b.Navigation("Meta")
                        .IsRequired();

                    b.Navigation("Steps");
                });

            modelBuilder.Entity("AyBorg.SDK.Data.DAL.StepRecord", b =>
                {
                    b.Navigation("Ports");
                });
#pragma warning restore 612, 618
        }
    }
}
