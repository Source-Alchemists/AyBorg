// <auto-generated />
using System;
using AyBorg.Data.Agent;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AyBorg.Data.Agent.Migrations.PostgreSql.Migrations.Device
{
    [DbContext(typeof(DeviceContext))]
    [Migration("20230719072535_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AyBorg.Data.Agent.DevicePortRecord", b =>
                {
                    b.Property<Guid>("DbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Brand")
                        .HasColumnType("integer");

                    b.Property<Guid>("DeviceRecordId")
                        .HasColumnType("uuid");

                    b.Property<int>("Direction")
                        .HasColumnType("integer");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("DbId");

                    b.HasIndex("DeviceRecordId");

                    b.ToTable("AyBorgDevicePorts");
                });

            modelBuilder.Entity("AyBorg.Data.Agent.DeviceRecord", b =>
                {
                    b.Property<Guid>("DbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("MetaInfoDbId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("DbId");

                    b.HasIndex("MetaInfoDbId");

                    b.ToTable("AyBorgDevices");
                });

            modelBuilder.Entity("AyBorg.Data.Agent.PluginMetaInfoRecord", b =>
                {
                    b.Property<Guid>("DbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AssemblyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AssemblyVersion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DbId");

                    b.ToTable("PluginMetaInfoRecord");
                });

            modelBuilder.Entity("AyBorg.Data.Agent.DevicePortRecord", b =>
                {
                    b.HasOne("AyBorg.Data.Agent.DeviceRecord", "DeviceRecord")
                        .WithMany("Ports")
                        .HasForeignKey("DeviceRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceRecord");
                });

            modelBuilder.Entity("AyBorg.Data.Agent.DeviceRecord", b =>
                {
                    b.HasOne("AyBorg.Data.Agent.PluginMetaInfoRecord", "MetaInfo")
                        .WithMany()
                        .HasForeignKey("MetaInfoDbId");

                    b.Navigation("MetaInfo");
                });

            modelBuilder.Entity("AyBorg.Data.Agent.DeviceRecord", b =>
                {
                    b.Navigation("Ports");
                });
#pragma warning restore 612, 618
        }
    }
}
