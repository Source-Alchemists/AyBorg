name: Build & Release

on:
  push:
    branches:
      - '**'

jobs:
  build-gateway:

      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
            submodules: recursive
        - name: Build artifacts
          uses: "./.github/templates/build-selfcontained"
          with:
            service: "Gateway"
            artifact: "gateway"

  build-web:

      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
            submodules: recursive
        - name: Move only HTTP appsettings
          working-directory: src/Web
          run: mv appsettings.OnlyHTTP.json appsettings.json
        - name: Build artifacts
          uses: "./.github/templates/build-selfcontained"
          with:
            service: "Web"
            artifact: "web"

  build-log:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          submodules: recursive
      - name: Build artifacts
        uses: "./.github/templates/build-selfcontained"
        with:
          service: "Log"
          artifact: "log"

  build-agent:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          submodules: recursive
      - name: Build artifacts
        uses: "./.github/templates/build-selfcontained"
        with:
          service: "Agent"
          artifact: "agent"

  build-plugins:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          submodules: recursive
      - name: Publish AyBorg.Plugins.Base
        working-directory: src/Plugins/Base
        run: dotnet publish -c release -o ../../../build/AyBorg.Plugins.Base
      - name: Publish AyBorg.Plugins.ImageTorque
        working-directory: src/Plugins/ImageTorque
        run: dotnet publish -c release -o ../../../build/AyBorg.Plugins.ImageTorque
      - name: Publish AyBorg.Plugins.MQTT
        working-directory: src/Plugins/MQTT
        run: dotnet publish -c release -o ../../../build/AyBorg.Plugins.MQTT
      - name: Publish AyBorg.Plugins.ZXing
        working-directory: src/Plugins/ZXing
        run: dotnet publish -c release -o ../../../build/AyBorg.Plugins.ZXing
      - name: Copy license
        run: cp LICENSE build/AyBorg.Plugins.Base && cp LICENSE build/AyBorg.Plugins.ImageTorque && cp LICENSE build/AyBorg.Plugins.MQTT && cp LICENSE build/AyBorg.Plugins.ZXing
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: plugins
          path: build
          retention-days: 2

  codesign:

    needs: [build-gateway, build-web, build-log, build-agent]

    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
      - name: Codesign (Gateway)
        uses: "./.github/templates/codesign"
        with:
          service: "Gateway"
          artifact: "gateway"
      - name: Codesign (Web)
        uses: "./.github/templates/codesign"
        with:
          service: "Web"
          artifact: "web"
      - name: Codesign (Log)
        uses: "./.github/templates/codesign"
        with:
          service: "Log"
          artifact: "log"
      - name: Codesign (Agent)
        uses: "./.github/templates/codesign"
        with:
          service: "Agent"
          artifact: "agent"

